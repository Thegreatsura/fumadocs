{
  "openapi": "3.0.0",
  "paths": {
    "/v1/auth/token": {
      "post": {
        "operationId": "GetToken",
        "summary": "Get a token",
        "description": "Gets an authentication access token, to be used to authenticate calls to all other endpoints.\n\nInclude this token in the headers of all other endpoint calls:\n\n```\nAuthorization: Bearer <token>\n```",
        "parameters": [
          {
            "name": "authorization",
            "required": true,
            "in": "header",
            "description": "Header value for HTTP Basic authentication.\n\nTo encode the credentials:\n1. Concatenate the url encoded client id and secret with a colon (`:`) in between: `clientid:client_secret`\n2. Encode the result with Base64: `base64(clientid:client_secret)`\n3. Include the result in the `Authorization` header prefixed with `Basic `.\n\nExample:\n\n```\nAuthorization: Basic Y2xpZW50X2lkOmNsaWVudF9zZWNyZXQ=\n```",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestExceptionDto"
                }
              }
            }
          },
          "403": {
            "description": "Invalid credentials"
          }
        },
        "tags": ["authentication"],
        "security": [
          {
            "token": []
          }
        ]
      }
    }
  },
  "info": {
    "title": "Spec",
    "version": "1.0.0",
    "license": {
      "name": "Creative Commons Attribution-ShareAlike 4.0 International",
      "url": "https://creativecommons.org/licenses/by-sa/4.0/"
    }
  },
  "servers": [
    {
      "url": "https://domain.tld"
    }
  ],
  "components": {
    "securitySchemes": {
      "cloud-cloud": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http",
        "description": "A bearer token used for cloud-cloud authentication. It can be obtained by calling the [`POST /v1/auth/token`](#tag/authentication/operation/GetToken) endpoint."
      },
      "token": {
        "type": "http",
        "scheme": "basic",
        "description": "Basic credentials used to obtain a token for later cloud-cloud authentication with a bearer token. Used only in the [`POST /v1/auth/token`](#tag/authentication/operation/GetToken) endpoint."
      },
      "edge-cloud": {
        "type": "http",
        "scheme": "basic",
        "description": "Basic credentials used for cloud-edge authentication."
      }
    },
    "schemas": {
      "BadRequestExceptionDto": {
        "type": "object",
        "properties": {
          "message": {
            "description": "One or more specific error messages",
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ],
            "example": ["Invalid date"]
          },
          "error": {
            "type": "string",
            "description": "Bad Request",
            "example": "Bad Request"
          },
          "status_code": {
            "type": "number",
            "description": "400",
            "example": 400
          }
        },
        "required": ["message", "error", "status_code"]
      },
      "TokenDto": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "The access token"
          },
          "expires_in": {
            "type": "number",
            "description": "The lifetime of the token, in seconds",
            "example": 3600
          },
          "token_type": {
            "type": "string",
            "description": "The token type, only `Bearer` is supported",
            "example": "Bearer",
            "enum": ["Bearer"]
          }
        },
        "required": ["access_token", "expires_in", "token_type"]
      }
    }
  },
  "x-tagGroups": [
    {
      "name": "Authentication",
      "tags": ["authentication"]
    }
  ]
}
