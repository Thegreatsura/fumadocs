{
  "name": "inline-toc",
  "files": [
    {
      "imports": {
        "./ui/collapsible": "components:ui/collapsible.tsx",
        "@/utils/cn": "lib:cn.ts"
      },
      "content": "'use client';\n\nimport { ChevronDown } from 'lucide-react';\nimport type { TOCItemType } from 'fumadocs-core/server';\nimport {\n  Collapsible,\n  CollapsibleContent,\n  CollapsibleTrigger,\n} from './ui/collapsible';\nimport { ComponentProps } from 'react';\nimport { cn } from '@/utils/cn';\n\nexport interface InlineTocProps extends ComponentProps<typeof Collapsible> {\n  items: TOCItemType[];\n}\n\nexport function InlineTOC({ items, ...props }: InlineTocProps) {\n  return (\n    <Collapsible\n      {...props}\n      className={cn(\n        'not-prose rounded-lg border bg-fd-card text-fd-card-foreground',\n        props.className,\n      )}\n    >\n      <CollapsibleTrigger className=\"group inline-flex w-full items-center justify-between px-4 py-2.5 font-medium\">\n        {props.children ?? 'Table of Contents'}\n        <ChevronDown className=\"size-4 transition-transform duration-200 group-data-[state=open]:rotate-180\" />\n      </CollapsibleTrigger>\n      <CollapsibleContent>\n        <div className=\"flex flex-col p-4 pt-0 text-sm text-fd-muted-foreground\">\n          {items.map((item) => (\n            <a\n              key={item.url}\n              href={item.url}\n              className=\"border-s py-1.5 hover:text-fd-accent-foreground\"\n              style={{\n                paddingInlineStart: 12 * Math.max(item.depth - 1, 0),\n              }}\n            >\n              {item.title}\n            </a>\n          ))}\n        </div>\n      </CollapsibleContent>\n    </Collapsible>\n  );\n}\n",
      "path": "components:inline-toc.tsx"
    },
    {
      "imports": {
        "@/utils/cn": "lib:cn.ts"
      },
      "content": "'use client';\nimport * as CollapsiblePrimitive from '@radix-ui/react-collapsible';\nimport { forwardRef, useEffect, useState } from 'react';\nimport { cn } from '@/utils/cn';\n\nconst Collapsible = CollapsiblePrimitive.Root;\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger;\n\nconst CollapsibleContent = forwardRef<\n  HTMLDivElement,\n  React.ComponentPropsWithoutRef<typeof CollapsiblePrimitive.CollapsibleContent>\n>(({ children, ...props }, ref) => {\n  const [mounted, setMounted] = useState(false);\n\n  useEffect(() => {\n    setMounted(true);\n  }, []);\n\n  return (\n    <CollapsiblePrimitive.CollapsibleContent\n      ref={ref}\n      {...props}\n      className={cn(\n        'overflow-hidden',\n        mounted &&\n          'data-[state=closed]:animate-fd-collapsible-up data-[state=open]:animate-fd-collapsible-down',\n        props.className,\n      )}\n    >\n      {children}\n    </CollapsiblePrimitive.CollapsibleContent>\n  );\n});\n\nCollapsibleContent.displayName =\n  CollapsiblePrimitive.CollapsibleContent.displayName;\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent };\n",
      "path": "components:ui/collapsible.tsx"
    },
    {
      "imports": {},
      "content": "export { twMerge as cn } from 'tailwind-merge';\n",
      "path": "lib:cn.ts"
    }
  ],
  "subComponents": [],
  "dependencies": {
    "lucide-react": "",
    "fumadocs-core": "",
    "react": "",
    "@radix-ui/react-collapsible": "^1.1.11",
    "tailwind-merge": "^3.3.1"
  },
  "devDependencies": {}
}
