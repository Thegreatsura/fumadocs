{
  "name": "layouts/docs-min",
  "files": [
    {
      "imports": {
        "@/utils/cn": "lib:cn.ts"
      },
      "content": "'use client';\nimport type { PageTree } from 'fumadocs-core/server';\nimport { type ComponentProps, type ReactNode, useMemo } from 'react';\nimport { cn } from '@/utils/cn';\nimport { TreeContextProvider, useTreeContext } from 'fumadocs-ui/contexts/tree';\nimport Link from 'fumadocs-core/link';\nimport { useSearchContext } from 'fumadocs-ui/contexts/search';\nimport { useSidebar } from 'fumadocs-ui/contexts/sidebar';\nimport { cva } from 'class-variance-authority';\nimport { usePathname } from 'fumadocs-core/framework';\n\nexport interface DocsLayoutProps {\n  tree: PageTree.Root;\n  children: ReactNode;\n}\n\nexport function DocsLayout({ tree, children }: DocsLayoutProps) {\n  return (\n    <TreeContextProvider tree={tree}>\n      <header className=\"sticky top-0 bg-fd-background h-14 z-20\">\n        <nav className=\"flex flex-row items-center gap-2 size-full px-4\">\n          <Link href=\"/\" className=\"font-medium mr-auto\">\n            My Docs\n          </Link>\n\n          <SearchToggle />\n          <NavbarSidebarTrigger className=\"md:hidden\" />\n        </nav>\n      </header>\n      <main\n        id=\"nd-docs-layout\"\n        className=\"flex flex-1 flex-row [--fd-nav-height:56px]\"\n      >\n        <Sidebar />\n        {children}\n      </main>\n    </TreeContextProvider>\n  );\n}\n\nfunction SearchToggle(props: ComponentProps<'button'>) {\n  const { enabled, setOpenSearch } = useSearchContext();\n  if (!enabled) return;\n\n  return (\n    <button\n      {...props}\n      className={cn('text-sm', props.className)}\n      onClick={() => setOpenSearch(true)}\n    >\n      Search\n    </button>\n  );\n}\n\nfunction NavbarSidebarTrigger(props: ComponentProps<'button'>) {\n  const { open, setOpen } = useSidebar();\n\n  return (\n    <button\n      {...props}\n      className={cn('text-sm', props.className)}\n      onClick={() => setOpen(!open)}\n    >\n      Sidebar\n    </button>\n  );\n}\n\nfunction Sidebar() {\n  const { root } = useTreeContext();\n  const { open } = useSidebar();\n\n  const children = useMemo(() => {\n    function renderItems(items: PageTree.Node[]) {\n      return items.map((item) => (\n        <SidebarItem key={item.$id} item={item}>\n          {item.type === 'folder' ? renderItems(item.children) : null}\n        </SidebarItem>\n      ));\n    }\n\n    return renderItems(root.children);\n  }, [root]);\n\n  return (\n    <aside\n      className={cn(\n        'fixed flex flex-col shrink-0 p-4 top-14 z-20 text-sm overflow-auto md:sticky md:h-[calc(100dvh-56px)] md:w-[300px]',\n        'max-md:inset-x-0 max-md:bottom-0 max-md:bg-fd-background',\n        !open && 'max-md:invisible',\n      )}\n    >\n      {children}\n    </aside>\n  );\n}\n\nconst linkVariants = cva(\n  'flex items-center gap-2 w-full py-1.5 rounded-lg text-fd-foreground/80 [&_svg]:size-4',\n  {\n    variants: {\n      active: {\n        true: 'text-fd-primary font-medium',\n        false: 'hover:text-fd-accent-foreground',\n      },\n    },\n  },\n);\n\nfunction SidebarItem({\n  item,\n  children,\n}: {\n  item: PageTree.Node;\n  children: ReactNode;\n}) {\n  const pathname = usePathname();\n\n  if (item.type === 'page') {\n    return (\n      <Link\n        href={item.url}\n        className={linkVariants({\n          active: pathname === item.url,\n        })}\n      >\n        {item.icon}\n        {item.name}\n      </Link>\n    );\n  }\n\n  if (item.type === 'separator') {\n    return (\n      <p className=\"text-fd-muted-foreground mt-6 mb-2 first:mt-0\">\n        {item.icon}\n        {item.name}\n      </p>\n    );\n  }\n\n  return (\n    <div>\n      {item.index ? (\n        <Link\n          className={linkVariants({\n            active: pathname === item.index.url,\n          })}\n          href={item.index.url}\n        >\n          {item.index.icon}\n          {item.index.name}\n        </Link>\n      ) : (\n        <p className={cn(linkVariants(), 'text-start')}>\n          {item.icon}\n          {item.name}\n        </p>\n      )}\n      <div className=\"pl-4 border-l flex flex-col\">{children}</div>\n    </div>\n  );\n}\n",
      "path": "components:layouts/docs.tsx"
    },
    {
      "imports": {
        "@/utils/cn": "lib:cn.ts"
      },
      "content": "'use client';\nimport {\n  type PageTree,\n  type TableOfContents,\n  type TOCItemType,\n} from 'fumadocs-core/server';\nimport { type ComponentProps, type ReactNode, useMemo } from 'react';\nimport { AnchorProvider, useActiveAnchors } from 'fumadocs-core/toc';\nimport { cn } from '@/utils/cn';\nimport { useTreeContext } from 'fumadocs-ui/contexts/tree';\nimport { Link, usePathname } from 'fumadocs-core/framework';\n\nexport interface DocsPageProps {\n  toc?: TableOfContents;\n\n  children: ReactNode;\n}\n\nexport function DocsPage({ toc = [], ...props }: DocsPageProps) {\n  return (\n    <AnchorProvider toc={toc}>\n      <main className=\"flex w-full min-w-0 flex-col\">\n        <article className=\"flex flex-1 flex-col w-full max-w-[860px] gap-6 px-4 py-8 md:px-6 md:mx-auto\">\n          {props.children}\n          <Footer />\n        </article>\n      </main>\n      {toc.length > 0 && (\n        <div className=\"sticky top-(--fd-nav-height) w-[286px] shrink-0 h-[calc(100dvh-var(--fd-nav-height))] p-4 overflow-auto max-xl:hidden\">\n          <p className=\"text-sm text-fd-muted-foreground mb-2\">On this page</p>\n          <div className=\"flex flex-col\">\n            {toc.map((item) => (\n              <TocItem key={item.url} item={item} />\n            ))}\n          </div>\n        </div>\n      )}\n    </AnchorProvider>\n  );\n}\n\nexport function DocsBody(props: ComponentProps<'div'>) {\n  return (\n    <div {...props} className={cn('prose', props.className)}>\n      {props.children}\n    </div>\n  );\n}\n\nexport function DocsDescription(props: ComponentProps<'p'>) {\n  // don't render if no description provided\n  if (props.children === undefined) return null;\n\n  return (\n    <p\n      {...props}\n      className={cn('mb-8 text-lg text-fd-muted-foreground', props.className)}\n    >\n      {props.children}\n    </p>\n  );\n}\n\nexport function DocsTitle(props: ComponentProps<'h1'>) {\n  return (\n    <h1 {...props} className={cn('text-3xl font-semibold', props.className)}>\n      {props.children}\n    </h1>\n  );\n}\n\nfunction TocItem({ item }: { item: TOCItemType }) {\n  const isActive = useActiveAnchors().includes(item.url.slice(1));\n\n  return (\n    <a\n      href={item.url}\n      className={cn(\n        'text-sm text-fd-foreground/80 py-1',\n        isActive && 'text-fd-primary',\n      )}\n      style={{\n        paddingLeft: Math.max(0, item.depth - 2) * 16,\n      }}\n    >\n      {item.title}\n    </a>\n  );\n}\n\nfunction Footer() {\n  const { root } = useTreeContext();\n  const pathname = usePathname();\n  const flatten = useMemo(() => {\n    const result: PageTree.Item[] = [];\n\n    function scan(items: PageTree.Node[]) {\n      for (const item of items) {\n        if (item.type === 'page') result.push(item);\n        else if (item.type === 'folder') {\n          if (item.index) result.push(item.index);\n          scan(item.children);\n        }\n      }\n    }\n\n    scan(root.children);\n    return result;\n  }, [root]);\n\n  const { previous, next } = useMemo(() => {\n    const idx = flatten.findIndex((item) => item.url === pathname);\n\n    if (idx === -1) return {};\n    return {\n      previous: flatten[idx - 1],\n      next: flatten[idx + 1],\n    };\n  }, [flatten, pathname]);\n\n  return (\n    <div className=\"flex flex-row justify-between gap-2 items-center font-medium\">\n      {previous ? <Link href={previous.url}>{previous.name}</Link> : null}\n      {next ? <Link href={next.url}>{next.name}</Link> : null}\n    </div>\n  );\n}\n",
      "path": "components:layouts/page.tsx"
    },
    {
      "imports": {},
      "content": "export { twMerge as cn } from 'tailwind-merge';\n",
      "path": "lib:cn.ts"
    }
  ],
  "subComponents": [],
  "dependencies": {
    "fumadocs-core": "",
    "react": "",
    "fumadocs-ui": "",
    "class-variance-authority": "^0.7.1",
    "tailwind-merge": "^3.3.1"
  },
  "devDependencies": {}
}
